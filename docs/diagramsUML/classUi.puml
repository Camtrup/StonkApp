@startuml UIClass
class ui.StonkLoginTest {
+ void start(Stage)
+ void testLoginFalse()
+ void testLoginTrue()
}

class ui.LoginController {
- Button login
- Button registerUserNew
- TextField password
- TextField username
- Label feedBack
- User user
- HttpHandler handler
+ void login()
+ void isLoginValid()
+ void registerUserNew()
}

class ui.StonkAppTest {
+ void start(Stage)
+ void testLoginTrue()
}
class ui.StonkRegisterTest {
+ void start(Stage)
+ void testRegisterFalse()
}

class ui.StonkBuyTest {
+ void start(Stage)
+ void testStocks()
}
class ui.HttpHandler {
- Gson handler
+ User getUser(String,String)
+ String buyOrSellStonk(boolean,String,String,String,int)
+ String addOrRemoveStonk(boolean,String,String,String,int)
+ String newUser(String,String,String,String,Float,int)
+ String removeUser(String,String)
+ String isLoginValid(String,String)
+ String addMoreValue(String,String,Float)
+ String addOrRemoveWatchList(boolean,String,String,String)
+ String save()
}
class ui.StockPageController {
- User user
- Stonk stock
~ HttpHandler handler
- Label moneyFlow
- Label owning
- Label priceChange
- Label priceTicker
- Label stockTicker
- Label totPrice1
- TextField amountStock
- TextField username
- Label feedBack
- Button buyBtn
- Button sellBtn
- Button backToMain
- Button addWatchList
+ void backToMain()
+ void updateStockPage()
- void userFeedback(String)
+ void updateTotalPrice()
+ void checkIfNum(TextField)
+ void watchStock()
+ void buy()
+ void sell()
- boolean checkForWatchList()
- void initialize()
}

class ui.RegisterController {
- TextField age
- TextField cash
- Button exitBtn
- TextField firstname
- TextField lastname
- TextField password
- Button registerUser
- TextField username
- Label feedBack
- User user
~ HttpHandler handler
+ void loginFromRegister()
+ void backToLogin()
+ void registerUser()
}
class ui.MainController {
- User user
- GridPane gridpane
- Label cashMoneyFlow
- Label equity
- Label fullName
- Label growth
- Label growthPercent
- Text balanceString
- TextField age
- TextField cash
- TextField firstname
- TextField lastname
- TextField password
- TextField searchBar
- TextField username
- VBox scrollPane
- Button watchList
- Button myStocks
- Button myProfile
- Button searchButton
- Label feedBack
- Float ecuityChange
- Float stockPriceChanged
- Float growthPerStock
- String stockOnWeb
- VBox h1
~ HttpHandler handler
+ String decimalform(Float)
+ void displayOnMain()
+ void growthPercent()
+ float cashEarnedPercent()
+ void toStockPage()
+ void openBrowser()
+ void portfolioAndWatchList(Boolean,String,String,String)
+ void displayPortfolio()
+ void showWatchList()
+ void toProfile()
- void initialize()
}

class ui.SuperController {
- StonkApp app
+ void changeScene(String,User,Stonk)
}

class ui.ProfileController {
- Button moneyAddBtn
- Button logOut
- Button deleteUser
- Button toMain
- Label addedPrompt
- Label balance
- Label name
- Text startedWith
- TextField moneyAdd
- Label feedBack
- User user
~ HttpHandler handler
+ void displayOnProfile()
+ void addValue()
+ void logOut()
+ void deleteUser()
+ void toMain()
}

class ui.StartApp {
+ {static} void main(String[])
}
class ui.StonkApp {
- {static} Stage stg
+ void start(Stage)
# Scene getScene()
# {static} void setStage(Stage)
}
class ui.StonkUserTest {
+ void start(Stage)
+ void testLoginBackLogout()
}

org.testfx.framework.junit5.ApplicationTest <|-- ui.StonkLoginTest
ui.SuperController <|-- ui.LoginController
org.testfx.framework.junit5.ApplicationTest <|-- ui.StonkAppTest
org.testfx.framework.junit5.ApplicationTest <|-- ui.StonkRegisterTest
org.testfx.framework.junit5.ApplicationTest <|-- ui.StonkBuyTest
ui.SuperController <|-- ui.StockPageController
ui.SuperController <|-- ui.RegisterController
ui.SuperController <|-- ui.MainController
ui.SuperController <|-- ui.ProfileController
javafx.application.Application <|-- ui.StonkApp
org.testfx.framework.junit5.ApplicationTest <|-- ui.StonkUserTest



@enduml